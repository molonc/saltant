{"swagger": "2.0", "info": {"title": "saltant API", "version": "v1"}, "host": "https://mwiens91.github.io/saltant/", "schemes": ["http"], "basePath": "/api", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Bearer": {"description": "JWT access token (all users; transient)", "in": "header", "name": "Authorization", "type": "apiKey"}, "Token": {"description": "DRF TokenAuthentication token (select users; permanent)", "in": "header", "name": "Authorization", "type": "apiKey"}}, "security": [{"Bearer": []}, {"Token": []}], "paths": {"/taskinstances/": {"get": {"operationId": "taskinstances_list", "description": "A viewset for task instances.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__iexact", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "name__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__istartswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__iendswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__iexact", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "state__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__istartswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__iendswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "task_type", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "task_type__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "task_queue", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "task_queue__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "datetime_created", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__year", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__month", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__day", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__week", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__week_day", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__quarter", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__hour", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__minute", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished__year", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__month", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__day", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__week", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__week_day", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__quarter", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__hour", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__minute", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri"}, "previous": {"type": "string", "format": "uri"}, "results": {"type": "array", "items": {"$ref": "#/definitions/TaskInstance"}}}}}}, "tags": ["taskinstances"]}, "post": {"operationId": "taskinstances_create", "description": "A viewset for task instances.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TaskInstanceCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TaskInstanceCreate"}}}, "tags": ["taskinstances"]}, "parameters": []}, "/taskinstances/{uuid}/": {"get": {"operationId": "taskinstances_read", "description": "A viewset for task instances.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TaskInstance"}}}, "tags": ["taskinstances"]}, "patch": {"operationId": "taskinstances_partial_update", "description": "A viewset for task instances.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TaskInstanceStateUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TaskInstanceStateUpdate"}}}, "tags": ["taskinstances"]}, "parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/taskinstances/{uuid}/clone/": {"post": {"operationId": "taskinstances_clone", "description": "Clone a job with the same arguments, task type, and task queue.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {}}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TaskInstance"}}}, "tags": ["taskinstances"]}, "parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/taskinstances/{uuid}/terminate/": {"post": {"operationId": "taskinstances_terminate", "description": "Send a terminate signal to a job.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {}}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/TaskInstance"}}}, "tags": ["taskinstances"]}, "parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/taskqueues/": {"get": {"operationId": "taskqueues_list", "description": "A viewset for task queues.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__iexact", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "name__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__istartswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__iendswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__iexact", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "description__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__istartswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__iendswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "private", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "private__iexact", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "private__isnull", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "active", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "active__iexact", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "active__isnull", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri"}, "previous": {"type": "string", "format": "uri"}, "results": {"type": "array", "items": {"$ref": "#/definitions/TaskQueue"}}}}}}, "tags": ["taskqueues"]}, "post": {"operationId": "taskqueues_create", "description": "A viewset for task queues.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TaskQueue"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TaskQueue"}}}, "tags": ["taskqueues"]}, "parameters": []}, "/taskqueues/{id}/": {"get": {"operationId": "taskqueues_read", "description": "A viewset for task queues.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TaskQueue"}}}, "tags": ["taskqueues"]}, "put": {"operationId": "taskqueues_update", "description": "A viewset for task queues.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TaskQueue"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TaskQueue"}}}, "tags": ["taskqueues"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this task queue.", "required": true, "type": "integer"}]}, "/tasktypes/": {"get": {"operationId": "tasktypes_list", "description": "A viewset for task types.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__iexact", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "name__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__istartswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__iendswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__iexact", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "description__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__istartswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__iendswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "container_image", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_image__iexact", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_image__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_image__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_image__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "container_image__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_image__istartswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_image__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_image__iendswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_image__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_image__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_type", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_type__iexact", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_type__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_type__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_type__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "container_type__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_type__istartswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_type__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_type__iendswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_type__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_type__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "script_path", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "script_path__iexact", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "script_path__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "script_path__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "script_path__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "script_path__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "script_path__istartswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "script_path__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "script_path__iendswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "script_path__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "script_path__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__year", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__month", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__day", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__week", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__week_day", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__quarter", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__hour", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__minute", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri"}, "previous": {"type": "string", "format": "uri"}, "results": {"type": "array", "items": {"$ref": "#/definitions/TaskType"}}}}}}, "tags": ["tasktypes"]}, "post": {"operationId": "tasktypes_create", "description": "A viewset for task types.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TaskType"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TaskType"}}}, "tags": ["tasktypes"]}, "parameters": []}, "/tasktypes/{id}/": {"get": {"operationId": "tasktypes_read", "description": "A viewset for task types.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TaskType"}}}, "tags": ["tasktypes"]}, "put": {"operationId": "tasktypes_update", "description": "A viewset for task types.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TaskType"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TaskType"}}}, "tags": ["tasktypes"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this task type.", "required": true, "type": "integer"}]}, "/tasktypes/{task_type_id}/instances/": {"get": {"operationId": "tasktypes_instances_list", "description": "A viewset for task instances specific to a task type.", "parameters": [{"name": "state", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__iexact", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "state__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__istartswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__iendswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__iexact", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "name__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__istartswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__iendswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "task_queue", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "task_queue__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "datetime_created", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__year", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__month", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__day", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__week", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__week_day", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__quarter", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__hour", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__minute", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished__year", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__month", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__day", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__week", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__week_day", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__quarter", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__hour", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__minute", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri"}, "previous": {"type": "string", "format": "uri"}, "results": {"type": "array", "items": {"$ref": "#/definitions/TaskInstance"}}}}}}, "tags": ["tasktypes"]}, "post": {"operationId": "tasktypes_instances_create", "description": "Add in the task type to the request data.\n\nThis way the serializer validation is aware of the task type.\nNote that the validation is called prior to the perform_create\nhook.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TaskTypeInstanceCreate"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TaskTypeInstanceCreate"}}}, "tags": ["tasktypes"]}, "parameters": [{"name": "task_type_id", "in": "path", "required": true, "type": "string"}]}, "/tasktypes/{task_type_id}/instances/{uuid}/": {"get": {"operationId": "tasktypes_instances_read", "description": "A viewset for task instances specific to a task type.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TaskInstance"}}}, "tags": ["tasktypes"]}, "patch": {"operationId": "tasktypes_instances_partial_update", "description": "A viewset for task instances specific to a task type.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TaskInstanceStateUpdate"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TaskInstanceStateUpdate"}}}, "tags": ["tasktypes"]}, "parameters": [{"name": "task_type_id", "in": "path", "required": true, "type": "string"}, {"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/tasktypes/{task_type_id}/instances/{uuid}/clone/": {"post": {"operationId": "tasktypes_instances_clone", "description": "Clone a job with the same arguments, task type, and task queue.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {}}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TaskInstance"}}}, "tags": ["tasktypes"]}, "parameters": [{"name": "task_type_id", "in": "path", "required": true, "type": "string"}, {"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/tasktypes/{task_type_id}/instances/{uuid}/terminate/": {"post": {"operationId": "tasktypes_instances_terminate", "description": "Send a terminate signal to a job.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {}}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/TaskInstance"}}}, "tags": ["tasktypes"]}, "parameters": [{"name": "task_type_id", "in": "path", "required": true, "type": "string"}, {"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/token/": {"post": {"operationId": "token_create", "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenObtainPair"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenObtainPair"}}}, "tags": ["token"]}, "parameters": []}, "/token/refresh/": {"post": {"operationId": "token_refresh_create", "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenRefresh"}}}, "tags": ["token"]}, "parameters": []}, "/users/": {"get": {"operationId": "users_list", "description": "A viewset for users.", "parameters": [{"name": "username", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "username__iexact", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "username__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "username__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "username__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "username__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "username__istartswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "username__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "username__iendswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "username__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "username__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "email", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "email__iexact", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "email__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "email__icontains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "email__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "email__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "email__istartswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "email__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "email__iendswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "email__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "email__iregex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri"}, "previous": {"type": "string", "format": "uri"}, "results": {"type": "array", "items": {"$ref": "#/definitions/User"}}}}}}, "tags": ["users"]}, "parameters": []}, "/users/{username}/": {"get": {"operationId": "users_read", "description": "A viewset for users.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["users"]}, "parameters": [{"name": "username", "in": "path", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "required": true, "type": "string", "pattern": "^[\\w.@+-]+$"}]}}, "definitions": {"TaskType": {"title": "Task type", "required": ["name", "container_image", "container_type", "script_path"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "string", "pattern": "^[\\w.@+-]+$", "readOnly": true}, "name": {"title": "Name", "description": "The name of the task", "type": "string", "pattern": "^[\\w@+-]+$", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "description": "A description of the task", "type": "string"}, "datetime_created": {"title": "Datetime created", "type": "string", "format": "date-time", "readOnly": true}, "container_image": {"title": "Container image", "description": "The container name and tag. E.g., \"ubuntu:14.04\" for Docker; \"docker://ubuntu:14.04\" or \"shub://vsoch/hello-world\" for Singularity.", "type": "string", "maxLength": 200, "minLength": 1}, "container_type": {"title": "Container type", "description": "The type of container provided", "type": "string", "enum": ["docker", "singularity"]}, "script_path": {"title": "Script path", "description": "The path of the script to run inside of the container. *Must* be executable!", "type": "string", "maxLength": 400, "minLength": 1}, "logs_path": {"title": "Logs path", "description": "The path of the logs directory inside of the container. Specify null if no logs directory. Defaults to null.", "type": "string", "maxLength": 400}, "results_path": {"title": "Results path", "description": "The path of the results (or \"outputs\") directory inside of the container. Specify null if no results directory. Defaults to null.", "type": "string", "maxLength": 400}, "environment_variables": {"title": "Environment variables", "description": "A JSON array of environment variables to consume from the Celery worker's environment. Defaults to [].", "type": "string"}, "required_arguments": {"title": "Required arguments", "description": "A JSON array of required argument names. Defaults to [].", "type": "string"}, "required_arguments_default_values": {"title": "Required arguments default values", "description": "A JSON dictionary of default values for required arguments, where the keys are the argument names and the values are their corresponding default values. Defaults to {}.", "type": "string"}}}, "TaskQueue": {"title": "Task queue", "required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "string", "pattern": "^[\\w.@+-]+$", "readOnly": true}, "name": {"title": "Name", "description": "The name of the Celery queue", "type": "string", "pattern": "^[\\w@+-]+$", "maxLength": 50, "minLength": 1}, "description": {"title": "Description", "description": "A description of the queue", "type": "string"}, "private": {"title": "Private", "description": "A boolean specifying whether other users besides the queue creator can use the queue. Defaults to False.", "type": "boolean"}, "active": {"title": "Active", "description": "A boolean showing the status of the queue. As of now, this needs to be toggled manually. Defaults to True.", "type": "boolean"}}}, "TaskInstance": {"required": ["task_type", "task_queue"], "type": "object", "properties": {"uuid": {"title": "UUID", "description": "The UUID for the running job", "type": "string", "format": "uuid", "readOnly": true}, "user": {"title": "User", "type": "string", "pattern": "^[\\w.@+-]+$", "readOnly": true}, "task_type": {"$ref": "#/definitions/TaskType"}, "task_queue": {"$ref": "#/definitions/TaskQueue"}, "name": {"title": "Name", "description": "An optional non-unique name for the task instance", "type": "string", "pattern": "^[\\w@+-]+$", "maxLength": 200}, "state": {"title": "State", "type": "string", "enum": ["created", "published", "running", "successful", "failed", "terminated"], "readOnly": true}, "datetime_created": {"title": "Datetime created", "description": "When the job was created", "type": "string", "format": "date-time", "readOnly": true}, "datetime_finished": {"title": "Datetime finished", "description": "When the job finished.", "type": "string", "format": "date-time", "readOnly": true}, "arguments": {"title": "Arguments", "description": "A JSON dictionary of arguments, where the keys are the argument names and the values are their corresponding values. A task instance must specify values for all values of a task type's required arguments for which no default value exists. Defaults to {}.", "type": "string"}}}, "TaskInstanceCreate": {"required": ["task_type", "task_queue"], "type": "object", "properties": {"uuid": {"title": "UUID", "description": "The UUID for the running job", "type": "string", "format": "uuid", "readOnly": true}, "user": {"title": "User", "type": "string", "pattern": "^[\\w.@+-]+$", "readOnly": true}, "task_type": {"title": "Task type", "type": "integer"}, "task_queue": {"title": "Task queue", "type": "integer"}, "name": {"title": "Name", "description": "An optional non-unique name for the task instance", "type": "string", "pattern": "^[\\w@+-]+$", "maxLength": 200}, "state": {"title": "State", "type": "string", "enum": ["created", "published", "running", "successful", "failed", "terminated"], "readOnly": true}, "datetime_created": {"title": "Datetime created", "description": "When the job was created", "type": "string", "format": "date-time", "readOnly": true}, "datetime_finished": {"title": "Datetime finished", "description": "When the job finished.", "type": "string", "format": "date-time", "readOnly": true}, "arguments": {"title": "Arguments", "description": "A JSON dictionary of arguments, where the keys are the argument names and the values are their corresponding values. A task instance must specify values for all values of a task type's required arguments for which no default value exists. Defaults to {}.", "type": "string"}}}, "TaskInstanceStateUpdate": {"type": "object", "properties": {"state": {"title": "State", "type": "string", "enum": ["created", "published", "running", "successful", "failed", "terminated"]}}}, "TaskTypeInstanceCreate": {"required": ["task_queue"], "type": "object", "properties": {"uuid": {"title": "UUID", "description": "The UUID for the running job", "type": "string", "format": "uuid", "readOnly": true}, "user": {"title": "User", "type": "string", "pattern": "^[\\w.@+-]+$", "readOnly": true}, "task_type": {"title": "Task type", "type": "integer", "readOnly": true}, "task_queue": {"title": "Task queue", "type": "integer"}, "name": {"title": "Name", "description": "An optional non-unique name for the task instance", "type": "string", "pattern": "^[\\w@+-]+$", "maxLength": 200}, "state": {"title": "State", "type": "string", "enum": ["created", "published", "running", "successful", "failed", "terminated"], "readOnly": true}, "datetime_created": {"title": "Datetime created", "description": "When the job was created", "type": "string", "format": "date-time", "readOnly": true}, "datetime_finished": {"title": "Datetime finished", "description": "When the job finished.", "type": "string", "format": "date-time", "readOnly": true}, "arguments": {"title": "Arguments", "description": "A JSON dictionary of arguments, where the keys are the argument names and the values are their corresponding values. A task instance must specify values for all values of a task type's required arguments for which no default value exists. Defaults to {}.", "type": "string"}}}, "TokenObtainPair": {"required": ["username", "password"], "type": "object", "properties": {"username": {"title": "Username", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}}}, "User": {"required": ["username"], "type": "object", "properties": {"username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "email": {"title": "Email address", "type": "string", "format": "email", "maxLength": 254}}}}}
