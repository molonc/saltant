{"swagger": "2.0", "info": {"title": "saltant API", "version": "v1"}, "host": "https://saltant-org.github.io/saltant", "schemes": ["https"], "basePath": "/api", "consumes": ["application/json"], "produces": ["application/json"], "securityDefinitions": {"Bearer": {"description": "JWT access token (all users; transient)", "in": "header", "name": "Authorization", "type": "apiKey"}, "Token": {"description": "DRF TokenAuthentication token (select users; permanent)", "in": "header", "name": "Authorization", "type": "apiKey"}}, "security": [{"Bearer": []}, {"Token": []}], "paths": {"/containertaskinstances/": {"get": {"operationId": "containertaskinstances_list", "description": "A viewset for container task instances.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "name__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "state__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "user__username__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "task_type", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "task_type__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "task_queue", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "task_queue__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "datetime_created", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__year", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__range", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "datetime_created__lt", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__lte", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__gt", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__gte", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished__year", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__range", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "datetime_finished__lt", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished__lte", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished__gt", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished__gte", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri"}, "previous": {"type": "string", "format": "uri"}, "results": {"type": "array", "items": {"$ref": "#/definitions/ContainerTaskInstance"}}}}}}, "tags": ["containertaskinstances"]}, "post": {"operationId": "containertaskinstances_create", "description": "A viewset for container task instances.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ContainerTaskInstance"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ContainerTaskInstance"}}}, "tags": ["containertaskinstances"]}, "parameters": []}, "/containertaskinstances/{uuid}/": {"get": {"operationId": "containertaskinstances_read", "description": "A viewset for container task instances.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ContainerTaskInstance"}}}, "tags": ["containertaskinstances"]}, "parameters": [{"name": "uuid", "in": "path", "description": "The UUID for the running job.", "required": true, "type": "string", "format": "uuid"}]}, "/containertaskinstances/{uuid}/clone/": {"post": {"operationId": "containertaskinstances_clone", "description": "Clone a job with the same arguments, task type, and task queue.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {}}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ContainerTaskInstance"}}}, "tags": ["containertaskinstances"]}, "parameters": [{"name": "uuid", "in": "path", "description": "The UUID for the running job.", "required": true, "type": "string", "format": "uuid"}]}, "/containertaskinstances/{uuid}/terminate/": {"post": {"operationId": "containertaskinstances_terminate", "description": "Send a terminate signal to a job.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {}}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/ContainerTaskInstance"}}}, "tags": ["containertaskinstances"]}, "parameters": [{"name": "uuid", "in": "path", "description": "The UUID for the running job.", "required": true, "type": "string", "format": "uuid"}]}, "/containertasktypes/": {"get": {"operationId": "containertasktypes_list", "description": "A viewset for container task types.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "name__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "description__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "user__username__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "command_to_run", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "command_to_run__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "command_to_run__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "command_to_run__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "command_to_run__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "command_to_run__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__year", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__range", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "datetime_created__lt", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__lte", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__gt", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__gte", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_image", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_image__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_image__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "container_image__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_image__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_image__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_type", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_type__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_type__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "container_type__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_type__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "container_type__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri"}, "previous": {"type": "string", "format": "uri"}, "results": {"type": "array", "items": {"$ref": "#/definitions/ContainerTaskType"}}}}}}, "tags": ["containertasktypes"]}, "post": {"operationId": "containertasktypes_create", "description": "A viewset for container task types.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ContainerTaskType"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ContainerTaskType"}}}, "tags": ["containertasktypes"]}, "parameters": []}, "/containertasktypes/{id}/": {"get": {"operationId": "containertasktypes_read", "description": "A viewset for container task types.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ContainerTaskType"}}}, "tags": ["containertasktypes"]}, "put": {"operationId": "containertasktypes_update", "description": "A viewset for container task types.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ContainerTaskType"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ContainerTaskType"}}}, "tags": ["containertasktypes"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this container task type.", "required": true, "type": "integer"}]}, "/executabletaskinstances/": {"get": {"operationId": "executabletaskinstances_list", "description": "A viewset for executable task instances.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "name__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "state__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "state__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "user__username__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "task_type", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "task_type__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "task_queue", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "task_queue__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "datetime_created", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__year", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__range", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "datetime_created__lt", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__lte", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__gt", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__gte", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished__year", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_finished__range", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "datetime_finished__lt", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished__lte", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished__gt", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_finished__gte", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri"}, "previous": {"type": "string", "format": "uri"}, "results": {"type": "array", "items": {"$ref": "#/definitions/ExecutableTaskInstance"}}}}}}, "tags": ["executabletaskinstances"]}, "post": {"operationId": "executabletaskinstances_create", "description": "A viewset for executable task instances.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ExecutableTaskInstance"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ExecutableTaskInstance"}}}, "tags": ["executabletaskinstances"]}, "parameters": []}, "/executabletaskinstances/{uuid}/": {"get": {"operationId": "executabletaskinstances_read", "description": "A viewset for executable task instances.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ExecutableTaskInstance"}}}, "tags": ["executabletaskinstances"]}, "parameters": [{"name": "uuid", "in": "path", "description": "The UUID for the running job.", "required": true, "type": "string", "format": "uuid"}]}, "/executabletaskinstances/{uuid}/clone/": {"post": {"operationId": "executabletaskinstances_clone", "description": "Clone a job with the same arguments, task type, and task queue.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {}}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ExecutableTaskInstance"}}}, "tags": ["executabletaskinstances"]}, "parameters": [{"name": "uuid", "in": "path", "description": "The UUID for the running job.", "required": true, "type": "string", "format": "uuid"}]}, "/executabletaskinstances/{uuid}/terminate/": {"post": {"operationId": "executabletaskinstances_terminate", "description": "Send a terminate signal to a job.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"type": "object", "properties": {}}}], "responses": {"202": {"description": "", "schema": {"$ref": "#/definitions/ExecutableTaskInstance"}}}, "tags": ["executabletaskinstances"]}, "parameters": [{"name": "uuid", "in": "path", "description": "The UUID for the running job.", "required": true, "type": "string", "format": "uuid"}]}, "/executabletasktypes/": {"get": {"operationId": "executabletasktypes_list", "description": "A viewset for executable task types.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "name__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "description__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "user__username__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "command_to_run", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "command_to_run__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "command_to_run__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "command_to_run__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "command_to_run__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "command_to_run__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__year", "in": "query", "description": "", "required": false, "type": "number"}, {"name": "datetime_created__range", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "datetime_created__lt", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__lte", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__gt", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "datetime_created__gte", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri"}, "previous": {"type": "string", "format": "uri"}, "results": {"type": "array", "items": {"$ref": "#/definitions/ExecutableTaskType"}}}}}}, "tags": ["executabletasktypes"]}, "post": {"operationId": "executabletasktypes_create", "description": "A viewset for executable task types.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ExecutableTaskType"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/ExecutableTaskType"}}}, "tags": ["executabletasktypes"]}, "parameters": []}, "/executabletasktypes/{id}/": {"get": {"operationId": "executabletasktypes_read", "description": "A viewset for executable task types.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ExecutableTaskType"}}}, "tags": ["executabletasktypes"]}, "put": {"operationId": "executabletasktypes_update", "description": "A viewset for executable task types.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/ExecutableTaskType"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/ExecutableTaskType"}}}, "tags": ["executabletasktypes"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this executable task type.", "required": true, "type": "integer"}]}, "/taskqueues/": {"get": {"operationId": "taskqueues_list", "description": "A viewset for task queues.", "parameters": [{"name": "name", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "name__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "name__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "description__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "description__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "user__username__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "user__username__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "private", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "runs_executable_tasks", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "runs_docker_container_tasks", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "runs_singularity_container_tasks", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "active", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri"}, "previous": {"type": "string", "format": "uri"}, "results": {"type": "array", "items": {"$ref": "#/definitions/TaskQueue"}}}}}}, "tags": ["taskqueues"]}, "post": {"operationId": "taskqueues_create", "description": "A viewset for task queues.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TaskQueue"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TaskQueue"}}}, "tags": ["taskqueues"]}, "parameters": []}, "/taskqueues/{id}/": {"get": {"operationId": "taskqueues_read", "description": "A viewset for task queues.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TaskQueue"}}}, "tags": ["taskqueues"]}, "put": {"operationId": "taskqueues_update", "description": "A viewset for task queues.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TaskQueue"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TaskQueue"}}}, "tags": ["taskqueues"]}, "patch": {"operationId": "taskqueues_partial_update", "description": "A viewset for task queues.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TaskQueue"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TaskQueue"}}}, "tags": ["taskqueues"]}, "parameters": [{"name": "id", "in": "path", "description": "A unique integer value identifying this task queue.", "required": true, "type": "integer"}]}, "/token/": {"post": {"operationId": "token_create", "description": "Takes a set of user credentials and returns an access and refresh JSON web\ntoken pair to prove the authentication of those credentials.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenObtainPair"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenObtainPair"}}}, "tags": ["token"], "security": []}, "parameters": []}, "/token/refresh/": {"post": {"operationId": "token_refresh_create", "description": "Takes a refresh type JSON web token and returns an access type JSON web\ntoken if the refresh token is valid.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TokenRefresh"}}], "responses": {"201": {"description": "", "schema": {"$ref": "#/definitions/TokenRefresh"}}}, "tags": ["token"], "security": []}, "parameters": []}, "/updatetaskinstancestatus/{uuid}/": {"patch": {"operationId": "updatetaskinstancestatus_partial_update", "description": "Updates the status for task instances of any class of task.", "parameters": [{"name": "data", "in": "body", "required": true, "schema": {"$ref": "#/definitions/TaskInstanceStateUpdateRequest"}}], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/TaskInstanceStateUpdateResponse"}}}, "tags": ["updatetaskinstancestatus"]}, "parameters": [{"name": "uuid", "in": "path", "required": true, "type": "string"}]}, "/users/": {"get": {"operationId": "users_list", "description": "A viewset for users.", "parameters": [{"name": "username", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "username__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "username__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "username__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "username__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "username__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "email", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "email__contains", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "email__in", "in": "query", "description": "Multiple values may be separated by commas.", "required": false, "type": "string"}, {"name": "email__startswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "email__endswith", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "email__regex", "in": "query", "description": "", "required": false, "type": "string"}, {"name": "page", "in": "query", "description": "A page number within the paginated result set.", "required": false, "type": "integer"}, {"name": "page_size", "in": "query", "description": "Number of results to return per page.", "required": false, "type": "integer"}], "responses": {"200": {"description": "", "schema": {"required": ["count", "results"], "type": "object", "properties": {"count": {"type": "integer"}, "next": {"type": "string", "format": "uri"}, "previous": {"type": "string", "format": "uri"}, "results": {"type": "array", "items": {"$ref": "#/definitions/User"}}}}}}, "tags": ["users"]}, "parameters": []}, "/users/{username}/": {"get": {"operationId": "users_read", "description": "A viewset for users.", "parameters": [], "responses": {"200": {"description": "", "schema": {"$ref": "#/definitions/User"}}}, "tags": ["users"]}, "parameters": [{"name": "username", "in": "path", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "required": true, "type": "string", "pattern": "^[\\w.@+-]+$"}]}}, "definitions": {"ContainerTaskInstance": {"required": ["task_queue", "task_type"], "type": "object", "properties": {"uuid": {"title": "UUID", "description": "The UUID for the running job.", "type": "string", "format": "uuid", "readOnly": true}, "user": {"title": "User", "type": "string", "pattern": "^[\\w.@+-]+$", "readOnly": true}, "name": {"title": "Name", "description": "An optional non-unique name for the task instance.", "type": "string", "maxLength": 200}, "state": {"title": "State", "type": "string", "enum": ["created", "published", "running", "successful", "failed", "terminated"], "readOnly": true}, "datetime_created": {"title": "Datetime created", "description": "When the job was created.", "type": "string", "format": "date-time", "readOnly": true}, "datetime_finished": {"title": "Datetime finished", "description": "When the job finished.", "type": "string", "format": "date-time", "readOnly": true}, "arguments": {"title": "Arguments", "description": "A JSON dictionary of arguments, where the keys are the argument names and the values are their corresponding values. A task instance must specify values for all values of a task type's required arguments for which no default value exists. Defaults to {}.", "type": "string"}, "task_queue": {"title": "Task queue", "description": "The queue this instance runs on.", "type": "integer"}, "task_type": {"title": "Task type", "description": "The task type for which this is an instance.", "type": "integer"}}}, "ContainerTaskType": {"required": ["name", "command_to_run", "container_image", "container_type"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "string", "pattern": "^[\\w.@+-]+$", "readOnly": true}, "name": {"title": "Name", "description": "The name of the task.", "type": "string", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "description": "A description of the task.", "type": "string"}, "datetime_created": {"title": "Datetime created", "type": "string", "format": "date-time", "readOnly": true}, "command_to_run": {"title": "Command to run", "description": "The command to run to execute the task. For example, \"python /app/myscript.py\". Note that shell operators will *not* be parsed; for example, | and &&. Arguments will be appended to the end of the command.", "type": "string", "maxLength": 400, "minLength": 1}, "environment_variables": {"title": "Environment variables", "description": "A JSON array of environment variables to consume from the Celery worker's environment. Defaults to []. Note that all task instances have their job UUID available in the environment variable JOB_UUID.", "type": "string"}, "required_arguments": {"title": "Required arguments", "description": "A JSON array of required argument names. Defaults to [].", "type": "string"}, "required_arguments_default_values": {"title": "Required arguments default values", "description": "A JSON dictionary of default values for required arguments, where the keys are the argument names and the values are their corresponding default values. Defaults to {}.", "type": "string"}, "logs_path": {"title": "Logs path", "description": "The path of the logs directory inside the container. Specify null if no logs directory. Defaults to null.", "type": "string", "maxLength": 400, "x-nullable": true}, "results_path": {"title": "Results path", "description": "The path of the results (or \"outputs\") directory inside the container. Specify null if no results directory. Defaults to null.", "type": "string", "maxLength": 400, "x-nullable": true}, "container_image": {"title": "Container image", "description": "The container name and tag. For example, \"ubuntu:14.04\" for Docker; and \"docker://ubuntu:14.04\" or \"shub://vsoch/hello-world\" for Singularity.", "type": "string", "maxLength": 200, "minLength": 1}, "container_type": {"title": "Container type", "description": "The type of container provided.", "type": "string", "enum": ["docker", "singularity"]}}}, "ExecutableTaskInstance": {"required": ["task_queue", "task_type"], "type": "object", "properties": {"uuid": {"title": "UUID", "description": "The UUID for the running job.", "type": "string", "format": "uuid", "readOnly": true}, "user": {"title": "User", "type": "string", "pattern": "^[\\w.@+-]+$", "readOnly": true}, "name": {"title": "Name", "description": "An optional non-unique name for the task instance.", "type": "string", "maxLength": 200}, "state": {"title": "State", "type": "string", "enum": ["created", "published", "running", "successful", "failed", "terminated"], "readOnly": true}, "datetime_created": {"title": "Datetime created", "description": "When the job was created.", "type": "string", "format": "date-time", "readOnly": true}, "datetime_finished": {"title": "Datetime finished", "description": "When the job finished.", "type": "string", "format": "date-time", "readOnly": true}, "arguments": {"title": "Arguments", "description": "A JSON dictionary of arguments, where the keys are the argument names and the values are their corresponding values. A task instance must specify values for all values of a task type's required arguments for which no default value exists. Defaults to {}.", "type": "string"}, "task_queue": {"title": "Task queue", "description": "The queue this instance runs on.", "type": "integer"}, "task_type": {"title": "Task type", "description": "The task type for which this is an instance.", "type": "integer"}}}, "ExecutableTaskType": {"required": ["name", "command_to_run"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "string", "pattern": "^[\\w.@+-]+$", "readOnly": true}, "name": {"title": "Name", "description": "The name of the task.", "type": "string", "maxLength": 200, "minLength": 1}, "description": {"title": "Description", "description": "A description of the task.", "type": "string"}, "datetime_created": {"title": "Datetime created", "type": "string", "format": "date-time", "readOnly": true}, "command_to_run": {"title": "Command to run", "description": "The command to run to execute the task. For example, \"python /app/myscript.py\". Note that shell operators will *not* be parsed; for example, | and &&. Arguments will be appended to the end of the command.", "type": "string", "maxLength": 400, "minLength": 1}, "environment_variables": {"title": "Environment variables", "description": "A JSON array of environment variables to consume from the Celery worker's environment. Defaults to []. Note that all task instances have their job UUID available in the environment variable JOB_UUID.", "type": "string"}, "required_arguments": {"title": "Required arguments", "description": "A JSON array of required argument names. Defaults to [].", "type": "string"}, "required_arguments_default_values": {"title": "Required arguments default values", "description": "A JSON dictionary of default values for required arguments, where the keys are the argument names and the values are their corresponding default values. Defaults to {}.", "type": "string"}, "json_file_option": {"title": "JSON file option", "description": "The name of a command line option, e.g., --json-file, which accepts a JSON-encoded file for the command to run. If this value is non-null, then the instance's JSON arguments are written to a file and this file is passed to the command (cf. normal behaviour where the JSON arguments are passed as a single argument to the task).", "type": "string", "maxLength": 50, "x-nullable": true}}}, "TaskQueue": {"required": ["name"], "type": "object", "properties": {"id": {"title": "ID", "type": "integer", "readOnly": true}, "user": {"title": "User", "type": "string", "pattern": "^[\\w.@+-]+$", "readOnly": true}, "name": {"title": "Name", "description": "The name of the Celery queue.", "type": "string", "pattern": "^[\\w@+-]+$", "maxLength": 50, "minLength": 1}, "description": {"title": "Description", "description": "A description of the queue.", "type": "string"}, "private": {"title": "Private", "description": "A boolean specifying whether other users besides the queue creator can use the queue. Defaults to False.", "type": "boolean"}, "runs_executable_tasks": {"title": "Runs executable tasks", "description": "A boolean specifying whether the queue runs executable tasks. Defaults to True.", "type": "boolean"}, "runs_docker_container_tasks": {"title": "Runs Docker container tasks", "description": "A boolean specifying whether the queue runs container tasks that run in Docker containers. Defaults to True.", "type": "boolean"}, "runs_singularity_container_tasks": {"title": "Runs Singularity container tasks", "description": "A boolean specifying whether the queue runs container tasks that run in Singularity containers. Defaults to True.", "type": "boolean"}, "active": {"title": "Active", "description": "A boolean showing the status of the queue. As of now, this needs to be toggled manually. Defaults to True.", "type": "boolean"}}}, "TokenObtainPair": {"required": ["username", "password"], "type": "object", "properties": {"username": {"title": "Username", "type": "string", "minLength": 1}, "password": {"title": "Password", "type": "string", "minLength": 1}}}, "TokenRefresh": {"required": ["refresh"], "type": "object", "properties": {"refresh": {"title": "Refresh", "type": "string", "minLength": 1}}}, "TaskInstanceStateUpdateRequest": {"required": ["state"], "type": "object", "properties": {"state": {"title": "State", "type": "string", "enum": ["created", "published", "running", "successful", "failed", "terminated"]}}}, "TaskInstanceStateUpdateResponse": {"required": ["uuid", "state"], "type": "object", "properties": {"uuid": {"title": "Uuid", "type": "string", "maxLength": 36, "minLength": 1}, "state": {"title": "State", "type": "string", "enum": ["created", "published", "running", "successful", "failed", "terminated"]}}}, "User": {"required": ["username"], "type": "object", "properties": {"username": {"title": "Username", "description": "Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.", "type": "string", "pattern": "^[\\w.@+-]+$", "maxLength": 150, "minLength": 1}, "email": {"title": "Email address", "type": "string", "format": "email", "maxLength": 254}}}}}
